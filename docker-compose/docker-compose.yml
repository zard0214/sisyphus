version : '3'
services:
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - 8080:8080
      - 80:80
      - 443:443
  nacos:
    image: nacos/nacos-server:2.0.0-bugfix
    container_name: nacos-standalone
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_DB_NAME=nacos_devtest
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=nacos
      - MYSQL_SERVICE_PASSWORD=nacos
      - MYSQL_SERVICE_DB_PARAM=characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&useSSL=false
    volumes:
      - ./standalone-logs/:/home/nacos/logs
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9555:9555"
    depends_on:
      - mysql
    networks:
      backend:
        aliases:
          - nacos-standalone
  mysql:
    container_name: mysql
    image: nacos/nacos-mysql:5.7
    environment:
      - YSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=nacos_devtest
      - MYSQL_USER=nacos
      - MYSQL_PASSWORD=nacos
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ALLOW_EMPTY_PASSWORD=root
      - MYSQL_RANDOM_ROOT_PASSWORD=root
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    command: [
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_general_ci',
        '--innodb-buffer-pool-size=64M',
        '--max_connections=3000'
    ]
    networks:
      backend:
        aliases:
          - mysql
  sisphus_mysql:
    container_name: sisphus_mysql
    image: mysql:5.7.31
    ports:
      - 3307:3306
    privileged: true
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      MYSQL_USER: 'root'
      MYSQL_PASS: '123456'
    command: [
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_general_ci',
        '--innodb-buffer-pool-size=64M',
        '--max_connections=3000'
    ]
    networks:
      backend:
        aliases:
          - sisphus_mysql
  redis:
    container_name: redis_1
    image: redis:alpine
    ports:
      - 6379:6379
    env_file: .env
    expose:
      - 6379
    networks:
      backend:
        aliases:
          - redis_1
  zookeeper_1:
    container_name: zookeeper_1
    image: zookeeper:latest
    ports:
      - 2181:2181
    env_file: .env
    expose:
      - 2181
    networks:
      backend:
        aliases:
          - zookeeper_1
  zookeeper_2:
    container_name: zookeeper_2
    image: zookeeper:latest
    ports:
      - 2182:2181
    env_file: .env
    expose:
      - 2182
    networks:
      backend:
        aliases:
          - zookeeper_2
  zookeeper_3:
    container_name: zookeeper_3
    image: zookeeper:latest
    ports:
      - 2183:2181
    env_file: .env
    expose:
      - 2183
    networks:
      backend:
        aliases:
          - zookeeper_3
  nexus:
    container_name: nexus
    image: sonatype/nexus3:latest
#    restart: always
    environment:
      - TZ=Asia/Shanghai
    ports:
      - '8081:8081'
#  sentinel-dashboard:
#    image: registry.cn-hangzhou.aliyuncs.com/kancy/sentinel-dashboard-dynamic:1.7.2-beta
#    container_name: sentinel-dashboard
#    restart: on-failure
#    ports:
#      - "8021:8080"
#      - "8719:8719"
#    environment:
#      - "JAVA_OPTS=-Dserver.port=8080 -Dcsp.sentinel.dashboard.server=localhost:8080 -Dproject.name=sentinel-dashboard -Dcsp.sentinel.api.port=8719"
#    networks:
#      backend:
#        aliases:
#          - sentinel-dashboard
#  dubbo-admin:
#    image: chenchuxin/dubbo-admin
#    container_name: dubbo-admin
#    depends_on:
#      - zookeeper_1
#    ports:
#      - 7001:8080
#    networks:
#      backend:
#        aliases:
#          - dubbo-admin
networks:
  backend: